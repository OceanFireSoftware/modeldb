{{#any}}{{/any}}{{#generic}}{{/generic}}{{#double}}(x, y) -> x == y{{/double}}{{#float}}(x, y) -> x == y{{/float}}{{#integer}}(x, y) -> x == y{{/integer}}{{#long}}(x, y) -> x == y{{/long}}{{#string}}(x, y) -> x.equals(y){{/string}}{{#boolean}}(x, y) -> x == y{{/boolean}}{{#custom}}(x, y) -> x.equals(y){{/custom}}{{#is_list}}(x2, y2) -> IntStream.range(0, Math.min(x2.size(), y2.size())).mapToObj(i -> { {{#list_type}}Function3<{{>type}},{{>type}},Boolean> f2 = {{> equals}};{{/list_type}} return f2.apply(x2.get(i), y2.get(i));}).filter(x -> x != null).collect(Collectors.toList()).isEmpty(){{/is_list}}{{#is_map}}Map[{{#map_key_type}}{{> type}}{{/map_key_type}},{{#map_val_type}}{{> type}}{{/map_val_type}}]{{/is_map}}